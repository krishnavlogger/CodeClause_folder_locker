import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Ashish extends JFrame {
	private JTextField folderPath;
	private JButton browseButton, lockButton, unlockButton;
	private JFileChooser fileChooser;

	public Ashish() {
		super("Folder Lock");
		setLayout(new GridLayout(2, 1));
		JPanel topPanel = new JPanel(new FlowLayout());
		JLabel label = new JLabel("Select Folder: ");
		folderPath = new JTextField(20);
		browseButton = new JButton("Browse");
		topPanel.add(label);
		topPanel.add(folderPath);
		topPanel.add(browseButton);
		add(topPanel);
		JPanel bottomPanel = new JPanel(new FlowLayout());
		lockButton = new JButton("Lock");
		unlockButton = new JButton("Unlock");
		bottomPanel.add(lockButton);
		bottomPanel.add(unlockButton);
		add(bottomPanel);
		setSize(400, 150);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		fileChooser = new JFileChooser();
		fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		browseButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int returnValue = fileChooser.showOpenDialog(null);
				if (returnValue == JFileChooser.APPROVE_OPTION) {
					File selectedFile = fileChooser.getSelectedFile();
					folderPath.setText(selectedFile.getAbsolutePath());
				}
			}
		});
		lockButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String folder = folderPath.getText();
				if (!folder.isEmpty()) {
					File folderFile = new File(folder);
					if (folderFile.exists() && folderFile.isDirectory()) {
						File lockFile = new File(folder + File.separator + ".locked");
						try {
							lockFile.createNewFile();
							JOptionPane.showMessageDialog(null, "Folder locked successfully!");
						} catch (IOException ex) {
							ex.printStackTrace();
							JOptionPane.showMessageDialog(null, "Error locking folder!");
						}
					} else {
						JOptionPane.showMessageDialog(null, "Please select a valid folder!");
					}
				} else {
					JOptionPane.showMessageDialog(null, "Please select a folder!");
				}
			}
		});
		unlockButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String folder = folderPath.getText();
				if (!folder.isEmpty()) {
					File folderFile = new File(folder);
					if (folderFile.exists() && folderFile.isDirectory()) {
						File lockFile = new File(folder + File.separator + ".locked");
						if (lockFile.exists()) {
							lockFile.delete();
							JOptionPane.showMessageDialog(null, "Folder unlocked successfully!");
						} else {
							JOptionPane.showMessageDialog(null, "Folder is already unlocked!");
						}
					} else {
						JOptionPane.showMessageDialog(null, "Please select a valid folder!");
					}
				} else {
					JOptionPane.showMessageDialog(null, "Please select a folder!");
				}
			}
		});
	}

	public static void main(String[] args) {
		new Ashish();
	}
}